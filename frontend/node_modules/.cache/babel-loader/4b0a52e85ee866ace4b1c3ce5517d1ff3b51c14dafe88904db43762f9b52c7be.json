{"ast":null,"code":"import _slicedToArray from\"/Users/gracemora/Desktop/bs.gm.website-main/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"/Users/gracemora/Desktop/bs.gm.website-main/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/Users/gracemora/Desktop/bs.gm.website-main/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";// import { createContext, useReducer } from \"react\";\n// export const Store = createContext();\n// export function StoreProvider(props) {\n//   const initialState = {\n//     cart: {\n//       cartItems: [],\n//     },\n//   };\n//   function reducer(state, action) {\n//     //allows user to switch between two states (ie on and off)\n//     switch (action.type) {\n//       //add items to cart\n//       case \"CART_ADD_ITEM\":\n//         //keep all previous values and continue to add items\n//         return {\n//           ...state,\n//           cart: {\n//             ...cart,\n//             cartItems: [...state.cart.cartItems, action.payload],\n//           },\n//         };\n//       default:\n//         return state;\n//     }\n//   }\n//   // state is the start and dispact is the action to change the state\n//   const [state, dispatch] = useReducer(reducer, initialState);\n//   const value = { state, dispa };\n//   // .Provider is apart of the Context functionality in React, passes items to consumers\n//   return <Store.Provider value={value}>{props.childern}</Store.Provider>;\n// }\nimport{createContext,useReducer}from\"react\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Store=/*#__PURE__*/createContext();var initialState={userInfo:localStorage.getItem(\"userInfo\")?JSON.parse(localStorage.getItem(\"userInfo\")):null,cart:{shippingAddress:localStorage.getItem(\"shippingAddress\")?JSON.parse(localStorage.getItem(\"shippingAddress\"))://if doesn't exist, make it an empty Object\n{},paymentMethod:localStorage.getItem(\"paymentMethod\")?localStorage.getItem(\"paymentMethod\")://if doesn't exist, make it an empty string\n\"\",cartItems:localStorage.getItem(\"cartItems\")?// parse makes a javascript object\nJSON.parse(localStorage.getItem(\"cartItems\")):[]}};function reducer(state,action){//allows user to switch between two states (ie on and off)\nswitch(action.type){case\"CART_ADD_ITEM\":// add to cart\nvar newItem=action.payload;var existItem=state.cart.cartItems.find(function(item){return item._id===newItem._id;});var cartItems=existItem?state.cart.cartItems.map(function(item){return item._id===existItem._id?newItem:item;}):[].concat(_toConsumableArray(state.cart.cartItems),[newItem]);localStorage.setItem(\"cartItems\",JSON.stringify(cartItems));return _objectSpread(_objectSpread({},state),{},{cart:_objectSpread(_objectSpread({},state.cart),{},{cartItems:cartItems})});case\"CART_REMOVE_ITEM\":{//filter the cart items array\n// if the item ID does not equal the current id, return it, otherwise remove it\nvar _cartItems=state.cart.cartItems.filter(function(item){return item._id!==action.payload._id;});localStorage.setItem(\"cartItems\",JSON.stringify(_cartItems));return _objectSpread(_objectSpread({},state),{},{cart:_objectSpread(_objectSpread({},state.cart),{},{cartItems:_cartItems})});}case\"CART_CLEAR\":{return _objectSpread(_objectSpread({},state),{},{cart:_objectSpread(_objectSpread({},state.cart),{},{cartItems:[]})});}case\"USER_SIGNIN\":{return _objectSpread(_objectSpread({},state),{},{userInfo:action.payload});}case\"USER_SIGNOUT\":return _objectSpread(_objectSpread({},state),{},{userInfo:null,cart:{cartItems:[],shippingAddress:{},paymentMethod:\"\"}});case\"SAVE_SHIPPING_ADDRESS\":return _objectSpread(_objectSpread({},state),{},{cart:_objectSpread(_objectSpread({},state.cart),{},{shippingAddress:action.payload})});case\"SAVE_PAYMENT_METHOD\":return _objectSpread(_objectSpread({},state),{},{cart:_objectSpread(_objectSpread({},state.cart),{},{paymentMethod:action.payload})});default:return state;}}export function StoreProvider(props){// state is the start and dispact is the action to change the state\nvar _useReducer=useReducer(reducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var value={state:state,dispatch:dispatch};return/*#__PURE__*/_jsxs(Store.Provider,{value:value,children:[props.children,\" \"]});}","map":{"version":3,"names":["createContext","useReducer","jsxs","_jsxs","Store","initialState","userInfo","localStorage","getItem","JSON","parse","cart","shippingAddress","paymentMethod","cartItems","reducer","state","action","type","newItem","payload","existItem","find","item","_id","map","concat","_toConsumableArray","setItem","stringify","_objectSpread","filter","StoreProvider","props","_useReducer","_useReducer2","_slicedToArray","dispatch","value","Provider","children"],"sources":["/Users/gracemora/Desktop/bs.gm.website-main/frontend/src/Store.js"],"sourcesContent":["// import { createContext, useReducer } from \"react\";\n\n// export const Store = createContext();\n\n// export function StoreProvider(props) {\n//   const initialState = {\n//     cart: {\n//       cartItems: [],\n//     },\n//   };\n\n//   function reducer(state, action) {\n//     //allows user to switch between two states (ie on and off)\n//     switch (action.type) {\n//       //add items to cart\n//       case \"CART_ADD_ITEM\":\n//         //keep all previous values and continue to add items\n//         return {\n//           ...state,\n//           cart: {\n//             ...cart,\n//             cartItems: [...state.cart.cartItems, action.payload],\n//           },\n//         };\n//       default:\n//         return state;\n//     }\n//   }\n//   // state is the start and dispact is the action to change the state\n//   const [state, dispatch] = useReducer(reducer, initialState);\n//   const value = { state, dispa };\n\n//   // .Provider is apart of the Context functionality in React, passes items to consumers\n//   return <Store.Provider value={value}>{props.childern}</Store.Provider>;\n// }\nimport { createContext, useReducer } from \"react\";\n\nexport const Store = createContext();\n\nconst initialState = {\n  userInfo: localStorage.getItem(\"userInfo\")\n    ? JSON.parse(localStorage.getItem(\"userInfo\"))\n    : null,\n\n  cart: {\n    shippingAddress: localStorage.getItem(\"shippingAddress\")\n      ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n      : //if doesn't exist, make it an empty Object\n        {},\n    paymentMethod: localStorage.getItem(\"paymentMethod\")\n      ? localStorage.getItem(\"paymentMethod\")\n      : //if doesn't exist, make it an empty string\n        \"\",\n    cartItems: localStorage.getItem(\"cartItems\")\n      ? // parse makes a javascript object\n        JSON.parse(localStorage.getItem(\"cartItems\"))\n      : [],\n  },\n};\nfunction reducer(state, action) {\n  //allows user to switch between two states (ie on and off)\n  switch (action.type) {\n    case \"CART_ADD_ITEM\":\n      // add to cart\n      const newItem = action.payload;\n      const existItem = state.cart.cartItems.find(\n        (item) => item._id === newItem._id\n      );\n      const cartItems = existItem\n        ? state.cart.cartItems.map((item) =>\n            item._id === existItem._id ? newItem : item\n          )\n        : [...state.cart.cartItems, newItem];\n      localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n      return { ...state, cart: { ...state.cart, cartItems } };\n\n    case \"CART_REMOVE_ITEM\": {\n      //filter the cart items array\n      // if the item ID does not equal the current id, return it, otherwise remove it\n      const cartItems = state.cart.cartItems.filter(\n        (item) => item._id !== action.payload._id\n      );\n      localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n      return { ...state, cart: { ...state.cart, cartItems } };\n    }\n\n    case \"CART_CLEAR\": {\n      return { ...state, cart: { ...state.cart, cartItems: [] } };\n    }\n    case \"USER_SIGNIN\": {\n      return { ...state, userInfo: action.payload };\n    }\n    case \"USER_SIGNOUT\":\n      return {\n        ...state,\n        userInfo: null,\n        cart: {\n          cartItems: [],\n          shippingAddress: {},\n          paymentMethod: \"\",\n        },\n      };\n    case \"SAVE_SHIPPING_ADDRESS\":\n      return {\n        ...state,\n        cart: {\n          //leave state of cart and state alone thats what the ... mean\n          ...state.cart,\n          shippingAddress: action.payload,\n        },\n      };\n    case \"SAVE_PAYMENT_METHOD\":\n      return {\n        ...state,\n        cart: {\n          //leave state of cart and state alone thats what the ... mean\n          ...state.cart,\n          paymentMethod: action.payload,\n        },\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider(props) {\n  // state is the start and dispact is the action to change the state\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = { state, dispatch };\n  return <Store.Provider value={value}>{props.children} </Store.Provider>;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}